name: Lumen Build

on:
  push:
    branches: [ master ]
  pull_request_target:
    branches: [ master ]
  schedule:
    - cron: '37 9 1 * *'

jobs:
  lumen-unit-tests:
    name: "Lumen Tests"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        extensions: ["scoutapm", ""]
        lumen-version:
          - "5.5.*"
          - "6.*"
          - "7.*"
          - "8.*"
        php-version:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
        exclude:
          - {php-version: "7.1", lumen-version: "6.*"} # Lumen 6 requires 7.2+
          - {php-version: "7.1", lumen-version: "7.*"} # Lumen 7 requires 7.2+
          - {php-version: "7.1", lumen-version: "8.*"} # Lumen 8 requires 7.3+
          - {php-version: "7.2", lumen-version: "8.*"} # Lumen 8 requires 7.3+
          - {php-version: "7.4", lumen-version: "5.5.*"} # Lumen 5.5.* does not support PHP 7.4+
          - {php-version: "8.0", lumen-version: "5.5.*"} # Lumen 5.5.* does not support PHP 8.0+
          - {php-version: "8.0", lumen-version: "6.*"} # Lumen 6.* does not support PHP 8.0+
          - {php-version: "8.0", lumen-version: "7.*"} # Lumen 7.* does not support PHP 8.0+
    steps:
      - uses: actions/checkout@v2
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          tools: pecl
          extensions: ${{ matrix.extensions }}
      # --no-update then a full `composer update` is needed to overcome locked dependencies
      # See: https://github.com/composer/composer/issues/9561
      - name: "Remove existing requirements components (avoid conflicts)"
        run: "composer remove --dev symfony/* laravel/* --no-update --no-interaction"
      - name: "Require framework ${{ matrix.lumen-version}}"
        run: "composer require laravel/lumen:${{ matrix.lumen-version}} --no-update --no-interaction --prefer-dist --prefer-stable"
      - name: "Composer update with new requirements"
        run: "composer update --no-interaction --prefer-dist --prefer-stable"
      - name: "Run PHPUnit (Lumen) test suite"
        run: "vendor/bin/phpunit --testsuite=laravel" # Test suite is same as Laravel

  lumen-e2e:
    name: "Lumen End-to-End Test"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        extensions: ["scoutapm", ""]
        lumen-version:
          - "5.5.*"
          - "6.*"
          - "7.*"
          - "8.*"
        php-version:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
        exclude:
          - {php-version: "7.1", lumen-version: "6.*"} # Lumen 6 requires 7.2+
          - {php-version: "7.1", lumen-version: "7.*"} # Lumen 7 requires 7.2+
          - {php-version: "7.1", lumen-version: "8.*"} # Lumen 8 requires 7.3+
          - {php-version: "7.2", lumen-version: "8.*"} # Lumen 8 requires 7.3+
          - {php-version: "8.0", lumen-version: "5.5.*"} # Lumen 5.5.* does not support PHP 8.0+
          - {php-version: "8.0", lumen-version: "6.*"} # Lumen 6.* does not support PHP 8.0+
          - {php-version: "8.0", lumen-version: "7.*"} # Lumen 7.* does not support PHP 8.0+
    env:
      SCOUT_APM_KEY: ${{ secrets.SCOUT_APM_KEY }}
    steps:
      - uses: actions/checkout@v2
        with:
          path: scout-apm-php
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          tools: pecl
          extensions: ${{ matrix.extensions }}
      - name: "Install Lumen quickstart project"
        run: "composer create-project laravel/lumen:${{ matrix.lumen-version}} test-app --prefer-dist"
      - name: "Add scout-apm-php as a repository"
        run: cd test-app && composer config repositories.scout path ../scout-apm-php
      - name: "Require scout-apm-php current checkout"
        run: cd test-app && composer require scoutapp/scout-apm-php:*@dev composer/package-versions-deprecated
      - name: "Configure the application"
        run: cd test-app && cp ../scout-apm-php/.github/fixtures/lumen-app.php bootstrap/app.php
      - name: "Configure Scout"
        run: cd test-app && echo -e "\nSCOUT_KEY=\"\${SCOUT_APM_KEY}\"\nSCOUT_NAME=\"My Lumen App\"\nSCOUT_MONITOR=true\nSCOUT_LOG_LEVEL=\"debug\"" >> .env
      - name: "Load the index page to trigger instrumentation"
        run: |
          cd test-app
          cat .env
          LOG_CHANNEL=single php -S localhost:8000 -t public/ &
          # Give Lumen a chance to start...
          sleep 2
          # Very occasionally in GH Actions, core-agent didn't quite start in time - so load the page twice
          wget -O /dev/null http://localhost:8000
          sleep 1
          wget http://localhost:8000
          cat index.html
          ps -ax
      - name: "Check logs for successful payload send"
        run: |
          cd test-app
          ls -l storage/logs/
          cat storage/logs/lumen.log
          grep -q "DEBUG: \[Scout\] Sent whole payload successfully to core agent." storage/logs/lumen.log
